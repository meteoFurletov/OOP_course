# step 5
"""Нам необходимо создать класс Building. Мы должны научиться создавать здание определенной этажности
 и уметь бронировать за компанией определенный этаж в здании. Важно, что в нашем классе за одним
  этажом может быть закреплена только одна компания

Для этого в классе Building должно быть реализованы

метод __init__, который принимает количество этажей в здании
метод __setitem__, который закрепляет за определенным этажом компанию. Если этаж был занят другой
 компанией, нужно заменить название другой компанией
метод __getitem__, который возвращает название компании с этого этажа. В случае, если этаж пустует,
 следует вернуть None
метод __delitem__, который высвобождает этаж
В этом задании вы сами решаете какие атрибуты создавать внутри класса,
 главное реализовать магические методы из списка выше"""


class Building:
    def __init__(self, floors):
        self.floors = [0] * (floors + 1)

    '''метод __getitem__, который возвращает название компании с этого этажа. 
    В случае, если этаж пустует, следует вернуть None'''

    def __getitem__(self, item):
        if 0 < item < len(self.floors):
            return self.floors[item]

    '''закрепляет за определенным этажом компанию. Если этаж был занят другой компанией, 
    нужно заменить название другой компанией'''

    def __setitem__(self, key, value):
        if 0 < key < len(self.floors):
            self.floors[key] = value

    '''высвобождает этаж'''

    def __delitem__(self, key):
        if 0 < key < len(self.floors):
            self.floors[key] = None


# step 11
class Song:
    def __init__(self, title, artist):
        self.title = title
        self.artist = artist


class Playlist:
    '''создает в экземпляре атрибут songs. Изначально должен быть пустым списком;'''

    def __init__(self):
        self.songs = []

    '''возвращает песню из атрибута songs по индексу'''

    def __getitem__(self, item):
        return self.songs[item]

    '''добавляет песню в атрибут songs в указанный индекс. При этом нужно сдвинуть 
    уже имеющиеся песни вправо, у которых индекс был до момента вставки равен или 
    больше переданного'''

    def __setitem__(self, key, value):
        pass

    '''добавляет песню в конец плейлиста'''

    def add_song(self, sound):
        pass
